#include "s21_matrix.h"

//---------- creat_tests ----------//

#test s21_create_matrix_01 
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(1, 1, &A);
  ck_assert_int_eq(res, CONVERSATION_OK);
  s21_remove_matrix(&A);

#test s21_create_matrix_02
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(2, 2, &A);
  ck_assert_int_eq(res, CONVERSATION_OK);
  s21_remove_matrix(&A);

#test s21_create_matrix_03
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(3, 2, &A);
  ck_assert_int_eq(res, CONVERSATION_OK);
  s21_remove_matrix(&A);

#test s21_create_matrix_04
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(2, 4, &A);
  ck_assert_int_eq(res, CONVERSATION_OK);
  s21_remove_matrix(&A);


#test s21_create_matrix_05
 int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(10, 15, &A);
  ck_assert_int_eq(res, CONVERSATION_OK);
  s21_remove_matrix(&A);

#test s21_create_matrix_06
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(0, 0, &A);
  ck_assert_int_eq(res, CONVERSATION_ERROR);

#test s21_create_matrix_07
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(1, 0, &A);
  ck_assert_int_eq(res, CONVERSATION_ERROR);

#test s21_create_matrix_08
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(0, 1, &A);
  ck_assert_int_eq(res, CONVERSATION_ERROR);

#test s21_create_matrix_09
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(-1, 1, &A);
  ck_assert_int_eq(res, CONVERSATION_ERROR);

//---------- remove_tests ----------//

#test s21_remove_matrix_01
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(2, 2, &A);
  s21_remove_matrix(&A);
  if (A.matrix) {
    res = CONVERSATION_ERROR;
    }
  ck_assert_int_eq(res, CONVERSATION_OK);

#test s21_remove_matrix_02
   int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(1, 1, &A);
  s21_remove_matrix(&A);
  if (A.matrix) {
    res = CONVERSATION_ERROR;
  }
  ck_assert_int_eq(res, CONVERSATION_OK);

#test s21_remove_matrix_03
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(3, 2, &A);
  s21_remove_matrix(&A);
  if (A.matrix != NULL) {
    res = CONVERSATION_ERROR;
  }
  ck_assert_int_eq(res, CONVERSATION_OK);

#test s21_remove_matrix_04
   int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(3, 4, &A);
  s21_remove_matrix(&A);
  if (A.matrix != NULL) {
    res = CONVERSATION_ERROR;
  }
  ck_assert_int_eq(res, CONVERSATION_OK);
  
#test s21_remove_matrix_05
  int res = 0;
  matrix_t A = {0};

  res = s21_create_matrix(3, 2, &A);
  s21_remove_matrix(&A);
  if (A.matrix != NULL) {
    res = CONVERSATION_ERROR;
  }
  ck_assert_int_eq(res, CONVERSATION_OK);

//---------- equal_tests ----------//

#test s21_eq_matrix_01
  int res = 0;
  matrix_t A = {0};
  matrix_t B = {0};

  s21_create_matrix(3, 2, &A);
  s21_init_matrix(1.0, &A);

  s21_create_matrix(3, 2, &B);
  s21_init_matrix(1.0, &B);

  res = s21_eq_matrix(&A, &B);

  s21_remove_matrix(&A);
  s21_remove_matrix(&B);

  ck_assert_int_eq(res, COMP_SUCCESS);


#test s21_eq_matrix_02
  int res = 0;
  matrix_t A = {0};
  matrix_t B = {0};

  s21_create_matrix(3, 2, &A);
  s21_init_matrix(1.0, &A);

  s21_create_matrix(3, 2, &B);
  s21_init_matrix(2.0, &B);

  res = s21_eq_matrix(&B, &A);

  s21_remove_matrix(&A);
  s21_remove_matrix(&B);

  ck_assert_int_eq(res, COMP_FAILURE);

#test s21_eq_matrix_03
  int res = 0;
  matrix_t A = {0};
  matrix_t B = {0};

  s21_create_matrix(3, 4, &A);
  s21_init_matrix(-5.0, &A);

  s21_create_matrix(3, 4, &B);
  s21_init_matrix(1.0, &B);

  res = s21_eq_matrix(&A, &B);

  s21_remove_matrix(&A);
  s21_remove_matrix(&B);

  ck_assert_int_eq(res, COMP_FAILURE);

#test s21_eq_matrix_04
    int res = 0;
  matrix_t A = {0};
  matrix_t B = {0};

  s21_create_matrix(3, 2, &A);
  s21_init_matrix(10.0, &A);

  s21_create_matrix(3, 2, &B);
  s21_init_matrix(-10.0, &B);

  res = s21_eq_matrix(&A, &B);

  s21_remove_matrix(&A);
  s21_remove_matrix(&B);

  ck_assert_int_eq(res, COMP_FAILURE);
  
#test s21_eq_matrix_05
  int res = 0;
  matrix_t A = {0};
  matrix_t B = {0};

  s21_create_matrix(3, 2, &A);
  s21_init_matrix(1.0, &A);
  s21_create_matrix(3, 3, &B);
  s21_init_matrix(1.0, &B);
  res = s21_eq_matrix(&A, &B);
  s21_remove_matrix(&A);
  s21_remove_matrix(&B);
  ck_assert_int_eq(res, COMP_FAILURE);

#test s21_eq_matrix_06
  int res = 0;
  matrix_t A = {0};
  matrix_t B = {0};

  s21_create_matrix(10, 10, &A);
  s21_init_matrix(1.0, &A);

  s21_create_matrix(10, 10, &B);
  s21_init_matrix(1.0, &B);

  res = s21_eq_matrix(&A, &B);

  s21_remove_matrix(&A);
  s21_remove_matrix(&B);

  ck_assert_int_eq(res, COMP_SUCCESS);
